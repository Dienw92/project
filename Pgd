def pgd(model, X, y, epsilon, alpha, num_iter):
    """ Construct PGD adversarial examples on the examples X"""
    delta = torch.zeros_like(X, requires_grad=True)
    for t in range(num_iter):
        loss = F.cross_entropy(model(X + delta), y)
        loss.backward()
        delta.data = (delta + alpha*delta.grad.detach().sign()).clamp(-epsilon,epsilon)
        delta.data = torch.max(torch.min(delta.detach(), X + epsilon) - X, -epsilon - X + torch.min(delta.detach(), X + epsilon)) # clip X+delta to [0,1]
        delta.grad.zero_()
    return X + delta.detach()
